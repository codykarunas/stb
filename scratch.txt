Useful Commands:


pg_ctl -D /usr/local/var/postgres start/stop

steps to undo db migration:

rails db:migrate:down VERSION
rails destroy model <insert_model_name>

# ACTIVEADMIN
https://activeadmin.info/documentation.html
Register model to activeadmin
$> rails generate active_admin:resource

User: admin@example.com
password: password

#TODOS


Generate an admin user.
Generate views for the admin user.

User
  email
  password
  first_name
  last_name
  role

LineItem
  id
  quantity

  cart_id FK

  created_at
  updated_at

Order
  id
  subtotal
  total
  tax
  status

  user_id FK
  cart_id FK

  created_at
  updated_at

Item
  id
  name
  item_type
  price
  description
  image
  active
  created_at

Cart
  id
  created_at
  updated_at
  update_at

REF: https://stackoverflow.com/questions/21783819/processing-credit-card-payments-in-rails

  It's more than not recommended, If you store or directly handle card holder
  data yourself you must go through the lengthy and expensive process of
  becoming PCI compliant, failure to do so can result in you being held liable
  for penalties and losses by the card schemes in the event of a breach of your
    system.

A service like Stripe helps you largely avoid this burden.

... but how to make a refund if I don't have any credit card info available in
my database?

Using Stripe's API or Dashboard all you need to refund is the Order Id
generated by their system when the charge was initially made. You should never
need to see, or even be able to see the actual card number.
